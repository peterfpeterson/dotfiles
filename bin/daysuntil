#!/usr/bin/env python3
from datetime import datetime, date
from dateutil.relativedelta import relativedelta
import sys
from typing import Union

# when 32-bit time counters are exhausted
TIME_32BIT_EPOCH = date(year=2038, month=1, day=19)
EARLY_RETIRE = date(year=2031, month=6, day=2)

events = [('2025-04-06', 'CHKM'),
          ('2025-04-20', 'Easter'),
          ('2025-11-03', 'Mantid dev meeting'),
          ('2025-05-25', 'QT5 EOL'),
          ('2025-05-11', 'Mother\'s Day'),
          ('2025-06-27', 'Mantid 6.13'),
          (TIME_32BIT_EPOCH, 'int32 time fails'),
          (EARLY_RETIRE, 'full retirement'),
          ('2049-04-26', 'life expectancy')]


def standardize_date(epoch: Union[date, str]):
    if isinstance(epoch, str):
        # assume string is YYYY-MM-DD
        epoch = [int(item) for item in epoch.split('-')]
        return date(*epoch)
    else:
        # assume it is a date or datetime already
        return epoch


def time_until(epoch: date, shrink: bool=True) -> str:
    '''returns the difference in time down to the number of days'''
    # calculate the difference
    delta = relativedelta(epoch, datetime.now())

    def unit(value: int, noun: str, shrink: bool) -> str:
        if shrink:
            result = f'{value}{noun[0]}'
        else:
            result = f'{value} {noun}'
            if value != 1:
                result += 's'

        return result + ' '

    result = unit(delta.days, 'day', shrink)
    if delta.months or delta.years:
        result = unit(delta.months, 'month', shrink) + result

    if delta.years:
        result = unit(delta.years, 'year', shrink) + result

    return result

# convert all dates to date objects
events = [(standardize_date(item[0]), item[1]) for item in events]

# filter out everything in the past
events = [item for item in events
          if item[0] > datetime.now().date()]

# sort the events based on date
events.sort(key=lambda item: item[0])

conky = True
for datestamp, label in events:
    if conky:
        print(time_until(datestamp), r'${alignr}'+label)
    else:
        print(time_until(datestamp), '-', label)
